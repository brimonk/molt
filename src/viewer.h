#ifndef VIEWER_H
#define VIEWER_H

#include <SDL2/SDL.h>

#include "common.h"
#include "molt.h"

enum {
	INSTATE_NOTHING,
	INSTATE_PRESSED,
	INSTATE_HELD,
	INSTATE_RELEASED,
	// down -> PRESSED & HELD
	// up   -> NOTHING & RELEASED
	INSTATE_DOWN,
	INSTATE_UP,
	INSTATE_TOTAL
};

enum {
	// numerics
	INPUT_KEY_0,
	INPUT_KEY_1,
	INPUT_KEY_2,
	INPUT_KEY_3,
	INPUT_KEY_4,
	INPUT_KEY_5,
	INPUT_KEY_6,
	INPUT_KEY_7,
	INPUT_KEY_8,
	INPUT_KEY_9,

	// a-z keys in qwerty layout
	INPUT_KEY_Q,
	INPUT_KEY_W,
	INPUT_KEY_E,
	INPUT_KEY_R,
	INPUT_KEY_T,
	INPUT_KEY_Y,
	INPUT_KEY_U,
	INPUT_KEY_I,
	INPUT_KEY_O,
	INPUT_KEY_P,
	INPUT_KEY_A,
	INPUT_KEY_S,
	INPUT_KEY_D,
	INPUT_KEY_F,
	INPUT_KEY_G,
	INPUT_KEY_H,
	INPUT_KEY_J,
	INPUT_KEY_K,
	INPUT_KEY_L,
	INPUT_KEY_Z,
	INPUT_KEY_X,
	INPUT_KEY_C,
	INPUT_KEY_V,
	INPUT_KEY_B,
	INPUT_KEY_N,
	INPUT_KEY_M,

	INPUT_KEY_UARROW,
	INPUT_KEY_RARROW,
	INPUT_KEY_DARROW,
	INPUT_KEY_LARROW,

	// modifier keys
	INPUT_KEY_SHIFT,
	INPUT_KEY_TAB,

	// extras
	INPUT_KEY_ESC,
	INPUT_KEY_SPACE,
	INPUT_KEY_HOME,
	INPUT_KEY_END,
	INPUT_KEY_CTRL,

	// mouse "keys"
	INPUT_KEY_MLEFT,
	INPUT_KEY_MRIGHT,
	INPUT_KEY_MCENTER,

	INPUT_KEY_TOTAL
};

/* viewer_run : runs the molt graphical 3d simulation viewer */
s32 viewer_run(void *hunk, u64 hunksize, s32 fd, struct molt_cfg_t *cfg);

#endif // VIEWER_H

